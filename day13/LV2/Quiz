 주어진 정수의 배열을 중간 x-time으로 접는 방법을 써야 한다.

 An example says more than thousand words:

Fold 1-times:
[1,2,3,4,5] -> [6,6,3]

A little visualization (NOT for the algorithm but for the idea of folding):

 Step 1         Step 2        Step 3       Step 4       Step5
                     5/           5|         5\          
                    4/            4|          4\      
1 2 3 4 5      1 2 3/         1 2 3|       1 2 3\       6 6 3
----*----      ----*          ----*        ----*        ----*


Fold 2-times:
[1,2,3,4,5] -> [9,6]

보시다시피 숫자의 개수가 홀수일 경우 중간수는 그대로 남는다. 그렇지 않으면 접는 점이 중간수 사이에 있으므로 모든 숫자는 어떤 식으로 추가될 것이다

배열은 항상 숫자를 포함하며 null이 되지 않는다. 매개변수 런은 항상 0보다 큰 양의 정수이며, 메서드가 얼마나 많은 폴딩 런을 수행해야 하는지 알려준다.

하나의 요소가 있는 배열을 접으면 동일한 배열로 유지된다.

입력 배열을 수정하면 안 된다!

foldArray([1, 2, 3, 4, 5], 1) => [6, 6, 3]

foldArray([1, 2, 3, 4, 5], 2) => [9, 6]

foldArray([1, 2, 3, 4, 5], 3) => [15]

foldArray([-9, 9, -8, 8, 66, 23], 1) => [14, 75, 0]